---
layout: post
title: AWS Redshift에서 updating and inserting 하기
date: 2021-05-04 17:19:00
description: staging table 및 merge 사용
---

Redshift에 db를 적재하다 보면 update를 해야 되는 상황이 일어난다. 적재한 원본 데이터에 수정이 일어나서 그러는 경우도 있고 아예 새로운 데이터가 들어와서 업데이트가 필요한 경우도 있다. 삭제된 데이터 또한 따로 표시를 해주는 것도 좋다. 

이 경우 Redshift에서는 **단일 테이블**에서 업데이트를 하는 기능을 지원하진 않고 임시로든 따로든 Staging용 테이블이 필요하다. 그 부분에 대한 설명 또한 상세하게 가이드에 잘 나와있으니 참고하고 예제를 따라해보면 되겠다.

<a href="https://docs.aws.amazon.com/ko_kr/redshift/latest/dg/merge-examples.html " target="blank">https://docs.aws.amazon.com/ko_kr/redshift/latest/dg/merge-examples.html</a>

<br>
<br>

### 1. Sample merge data source

먼저 연습용 클러스터 생성시 tickit 데이터를 자동으로 적재되게 만든다. S3에서 가져와도 되긴 하는데 가져오는 COPY 기능을 이미 테스트했다면 시간을 아끼자. 


예시에서 사용한 데이터는 SALES 테이블.

SALES 테이블을 그대로 복사해서 SALES_UPDATE 테이블을 만들고 그 테이블에서 5번째 줄마다 변형을 일으킨다. 즉 업데이트 된 데이터들이라고 보는 거다. 

다음 SALES 원본 테이블에 새로운 데이터를 추가한다.

{% highlight sql %}

-- Create a sample table as a copy of the SALES table
create table sales_update as
select * from sales;

-- Change every fifth row so we have updates

update sales_update
set qtysold = qtysold*2,
pricepaid = pricepaid*0.8,
commission = commission*1.1
where saletime > '2008-11-30'
and mod(sellerid, 5) = 0;

-- Add some new rows so we have insert examples 
-- This example creates a duplicate of every fourth row

insert into sales_update
select (salesid + 172456) as salesid, listid, sellerid, buyerid, eventid, dateid, qtysold, pricepaid, commission, getdate() as saletime
from sales_update
where saletime > '2008-11-30'
and mod(sellerid, 4) = 0;

{% endhighlight %}


<br>
<br>

{% highlight sql %}

create temp table stagesales as
select * from sales_update
where sales_update.saletime > '2008-11-30' 
and sales_update.salesid = 
	(select sales.salesid 
     from sales
     where sales.salesid = sales_update.salesid
     and sales.listid = sales_update.listid
     and (sales_update.qtysold != sales.qtysold
         or sales_update.pricepaid != sales.pricepaid)
                           );


{% endhighlight %}